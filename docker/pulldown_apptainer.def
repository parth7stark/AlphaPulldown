Bootstrap: docker
From: nvidia/cuda:12.2.2-cudnn8-runtime-ubuntu20.04

%files
    /lus/eagle/projects/RAPINS/parth/AlphaPulldown /app/AlphaPulldown
%post
    # Set environment variables
    export CUDA=12.2.2
    export PATH="/opt/conda/bin:$PATH"
    export LD_LIBRARY_PATH="/opt/conda/lib:$LD_LIBRARY_PATH"

    # Update and install necessary packages
    apt-get update -y && apt-get upgrade -y
    apt-get install -y --reinstall libp11-kit0 libffi7
    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
        build-essential \
        cmake \
        cuda-command-line-tools-$(echo ${CUDA} | tr . - | cut -f1,2 -d-) \
        tzdata \
        wget \
        bc \
        openssh-client \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean

    # Install Miniforge3
    wget -q -P /tmp https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh \
    && bash /tmp/Miniforge3-Linux-x86_64.sh -b -p /opt/conda \
    && rm /tmp/Miniforge3-Linux-x86_64.sh

    # Install conda packages
    /opt/conda/bin/conda install --solver=classic -y \
        conda-forge::conda-libmamba-solver \
        conda-forge::libmamba \
        conda-forge::libmambapy \
        conda-forge::libarchive \
        conda-forge::git

    # Install mamba packages
    /opt/conda/bin/mamba install -y -c conda-forge -c bioconda -c omnia --solver classic \
        openmm==8.0 \
        pdbfixer==1.9 \
        kalign2 \
        modelcif \
        pip \
        hmmer \
        hhsuite \
        python=3.10 \
    && /opt/conda/bin/conda clean --all --force-pkgs-dirs --yes

    # Set up SSH
    # mkdir -p /root/.ssh && chmod 700 /root/.ssh
    # ssh-keyscan github.com >> /root/.ssh/known_hosts

    # Clone and install AlphaPulldown
    # git clone --recurse-submodules git@github.com:KosinskiLab/AlphaPulldown.git /opt/AlphaPulldown
    
    # Instead of cloning, copy your forked copy

    cd /app/AlphaPulldown
    pip3 install .

    # I added them based on developer installation -- not installing below backends as not using
    # pip3 install -e AlphaLink2 --no-deps
    # pip3 install -e ColabFold --no-deps
    # pip3 install -e alphafold --no-deps

    # Upgrade pip and install additional packages
    pip3 install --upgrade pip --no-cache-dir \
    && pip3 install --upgrade --no-cache-dir \
        pytest \
        "jax[cuda12]" 

    # pip install ray==2.5.1
    pip install ray
    # latest version 2.43.0

    # Apply custom changes to the `ray` library
    # cp -r /app/AlphaPulldown/parth_scripts/utils.py /opt/conda/lib/python3.10/site-packages/ray/_private/utils.py
    # Set permissions
    chmod u+s /sbin/ldconfig.real

%environment
    export PATH="/opt/conda/bin:$PATH"
    export LD_LIBRARY_PATH="/opt/conda/lib:$LD_LIBRARY_PATH"

%runscript
    exec bash "$@"